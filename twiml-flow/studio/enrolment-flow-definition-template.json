{
  "states": [
    {
      "transitions": [
        {
          "event": "incomingMessage"
        },
        {
          "event": "incomingCall",
          "next": "get_config"
        },
        {
          "event": "incomingRequest"
        }
      ],
      "type": "trigger",
      "name": "Trigger",
      "properties": {
        "offset": {
          "y": -590,
          "x": -720
        }
      }
    },
    {
      "transitions": [
        {
          "event": "audioComplete"
        }
      ],
      "type": "say-play",
      "name": "enrolment_complete",
      "properties": {
        "say": "Enrolment Complete",
        "voice": "Polly.Russell",
        "language": "en-AU",
        "loop": 1,
        "offset": {
          "y": 2350,
          "x": -100
        }
      }
    },
    {
      "transitions": [
        {
          "event": "next",
          "next": "healthcheck"
        }
      ],
      "type": "set-variables",
      "name": "set_variables",
      "properties": {
        "variables": [
          {
            "index": "0",
            "key": "count",
            "value": "0"
          },
          {
            "index": "1",
            "key": "digits",
            "value": "6"
          },
          {
            "key": "enrolType",
            "value": "Digits"
          },
          {
            "index": "3",
            "key": "connectorKey",
            "value": "{{widgets.get_config.parsed.connector_key}}"
          },
          {
            "index": "4",
            "key": "functions_host",
            "value": "{{widgets.get_config.parsed.functions_host}}"
          },
          {
            "index": "5",
            "key": "connector_server",
            "value": "{{widgets.get_config.parsed.connector_server}}"
          }
        ],
        "offset": {
          "y": -20,
          "x": -650
        }
      }
    },
    {
      "transitions": [
        {
          "event": "return",
          "next": "submit_SpeechResult"
        },
        {
          "event": "timeout"
        },
        {
          "event": "fail"
        }
      ],
      "type": "add-twiml-redirect",
      "name": "enrolment_function",
      "properties": {
        "url": "https://{{flow.variables.functions_host}}/enrolment/enrolment_gather?Count={{flow.variables.count}}&FlowSid={{flow.flow_sid}}",
        "method": "POST",
        "timeout": "14400",
        "offset": {
          "y": 900,
          "x": -100
        }
      }
    },
    {
      "transitions": [
        {
          "event": "next",
          "next": "check_count"
        }
      ],
      "type": "set-variables",
      "name": "increment_count",
      "properties": {
        "variables": [
          {
            "index": "0",
            "key": "count",
            "value": "{{flow.variables.count | plus: 1}}"
          }
        ],
        "offset": {
          "y": 1370,
          "x": -80
        }
      }
    },
    {
      "transitions": [
        {
          "event": "noMatch",
          "next": "submit_enrolment"
        },
        {
          "conditions": [
            {
              "type": "less_than",
              "friendly_name": "If count < 4",
              "arguments": [
                "{{flow.variables.count}}"
              ],
              "value": "4"
            }
          ],
          "event": "match",
          "next": "enrolment_function"
        }
      ],
      "type": "split-based-on",
      "name": "check_count",
      "properties": {
        "input": "{{flow.variables.count}}",
        "offset": {
          "y": 1600,
          "x": -80
        }
      }
    },
    {
      "transitions": [
        {
          "event": "success",
          "next": "speech_matched"
        },
        {
          "event": "failed"
        }
      ],
      "type": "make-http-request",
      "name": "submit_SpeechResult",
      "properties": {
        "url": "https://{{flow.variables.connector_server}}/recresult",
        "parameters": [
          {
            "key": "SpeechResult",
            "value": "{{widgets.enrolment_function.SpeechResult}}"
          },
          {
            "key": "Confidence",
            "value": "{{widgets.enrolment_function.Confidence}}"
          },
          {
            "key": "Caller",
            "value": "{{trigger.call.From}}"
          },
          {
            "key": "CallSid",
            "value": "{{trigger.call.CallSid}}"
          },
          {
            "key": "Count",
            "value": "{{flow.variables.count}}"
          },
          {
            "key": "mode",
            "value": "enrol"
          }
        ],
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "offset": {
          "y": 1130,
          "x": -90
        }
      }
    },
    {
      "transitions": [
        {
          "event": "success",
          "next": "check_success"
        },
        {
          "event": "failed"
        }
      ],
      "type": "make-http-request",
      "name": "submit_enrolment",
      "properties": {
        "url": "https://{{flow.variables.connector_server}}/enrol",
        "parameters": [
          {
            "key": "CallSid",
            "value": "{{trigger.call.CallSid}}"
          },
          {
            "key": "AccessKey",
            "value": "{{flow.variables.connectorKey}}"
          }
        ],
        "method": "POST",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "offset": {
          "y": 1810,
          "x": -80
        }
      }
    },
    {
      "transitions": [
        {
          "event": "success",
          "next": "check_enrolment"
        },
        {
          "event": "failed",
          "next": "notify_health_check"
        }
      ],
      "type": "make-http-request",
      "name": "healthcheck",
      "properties": {
        "url": "https://{{flow.variables.connector_server}}/ping",
        "method": "GET",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "offset": {
          "y": 210,
          "x": -650
        }
      }
    },
    {
      "transitions": [
        {
          "event": "audioComplete",
          "next": "healthcheck"
        }
      ],
      "type": "say-play",
      "name": "notify_health_check",
      "properties": {
        "say": "Waking Armor Vox up!",
        "voice": "Polly.Russell",
        "language": "en-AU",
        "loop": 1,
        "offset": {
          "y": 210,
          "x": -990
        }
      }
    },
    {
      "transitions": [
        {
          "event": "noMatch",
          "next": "send_error_status"
        },
        {
          "conditions": [
            {
              "type": "equal_to",
              "friendly_name": "If value equal_to good",
              "arguments": [
                "{{widgets.submit_enrolment.parsed.status}}"
              ],
              "value": "good"
            }
          ],
          "event": "match",
          "next": "enrolment_complete"
        }
      ],
      "type": "split-based-on",
      "name": "check_success",
      "properties": {
        "input": "{{widgets.submit_enrolment.parsed.status}}",
        "offset": {
          "y": 2040,
          "x": -80
        }
      }
    },
    {
      "transitions": [
        {
          "event": "audioComplete"
        }
      ],
      "type": "say-play",
      "name": "ennrolment_failed",
      "properties": {
        "say": "Sorry, your enrolment was not successful. I sent you an SMS with more details.",
        "voice": "Polly.Russell",
        "language": "en-AU",
        "loop": 1,
        "offset": {
          "y": 2170,
          "x": -1060
        }
      }
    },
    {
      "transitions": [
        {
          "event": "sent",
          "next": "ennrolment_failed"
        },
        {
          "event": "failed",
          "next": "ennrolment_failed"
        }
      ],
      "type": "send-message",
      "name": "send_error_status",
      "properties": {
        "body": "Unsuccessful enrolment with {{widgets.submit_enrolment.parsed.status}}",
        "from": "{{flow.channel.address}}",
        "service": "{{trigger.message.InstanceSid}}",
        "to": "{{contact.channel.address}}",
        "offset": {
          "y": 2170,
          "x": -690
        },
        "channel": "{{trigger.message.ChannelSid}}"
      }
    },
    {
      "transitions": [
        {
          "event": "success",
          "next": "check"
        },
        {
          "event": "failed"
        }
      ],
      "type": "make-http-request",
      "name": "check_enrolment",
      "properties": {
        "url": "https://{{flow.variables.connector_server}}/getvoiceprint",
        "parameters": [
          {
            "key": "Caller",
            "value": "{{trigger.call.From}}"
          },
          {
            "key": "AccessKey",
            "value": "x9F3afi3M3Pou7pssSxCZsa0ggQX0Hrw"
          }
        ],
        "method": "GET",
        "content_type": "application/x-www-form-urlencoded;charset=utf-8",
        "offset": {
          "y": 420,
          "x": -650
        }
      }
    },
    {
      "transitions": [
        {
          "event": "noMatch",
          "next": "previously_enrolled"
        },
        {
          "conditions": [
            {
              "type": "equal_to",
              "friendly_name": "If value equal_to not_enrolled",
              "arguments": [
                "{{widgets.check_enrolment.parsed.status}}"
              ],
              "value": "not_enrolled"
            }
          ],
          "event": "match",
          "next": "enrolment_function"
        }
      ],
      "type": "split-based-on",
      "name": "check",
      "properties": {
        "input": "{{widgets.check_enrolment.parsed.status}}",
        "offset": {
          "y": 680,
          "x": -430
        }
      }
    },
    {
      "transitions": [
        {
          "event": "audioComplete"
        }
      ],
      "type": "say-play",
      "name": "previously_enrolled",
      "properties": {
        "say": "Looks like you've previously enrolled using the number you're calling from. You are good to verify or ask for your number to be reset.",
        "voice": "Polly.Russell",
        "language": "en-AU",
        "loop": 1,
        "offset": {
          "y": 910,
          "x": -660
        }
      }
    },
    {
      "transitions": [
        {
          "event": "noMatch",
          "next": "try_again"
        },
        {
          "conditions": [
            {
              "type": "equal_to",
              "friendly_name": "If value equal_to ok",
              "arguments": [
                "{{widgets.submit_SpeechResult.parsed.status}}"
              ],
              "value": "ok"
            }
          ],
          "event": "match",
          "next": "increment_count"
        }
      ],
      "type": "split-based-on",
      "name": "speech_matched",
      "properties": {
        "input": "{{widgets.submit_SpeechResult.parsed.status}}",
        "offset": {
          "y": 1340,
          "x": -770
        }
      }
    },
    {
      "transitions": [
        {
          "event": "audioComplete",
          "next": "enrolment_function"
        }
      ],
      "type": "say-play",
      "name": "try_again",
      "properties": {
        "say": "Sorry, what you said did not match the expected phrase. Please try again.",
        "voice": "Polly.Russell",
        "language": "en-AU",
        "loop": 1,
        "offset": {
          "y": 1600,
          "x": -730
        }
      }
    },
    {
      "transitions": [
        {
          "event": "success",
          "next": "set_variables"
        },
        {
          "event": "fail"
        }
      ],
      "type": "run-function",
      "name": "get_config",
      "properties": {
        "url": "https://twiml-flow-3105-dev.twil.io/getConfig",
        "function_sid": "ZHb981996bc0e8517e8f4ad72370c2f0f9",
        "service_sid": "ZSc8e85bd2d65af5061e8817f73a7bb575",
        "environment_sid": "ZE86955aab4ab97636352260466695ea43",
        "offset": {
          "y": -280,
          "x": -650
        }
      }
    }
  ],
  "initial_state": "Trigger",
  "flags": {
    "allow_concurrent_calls": true
  },
  "description": "A New Flow"
}
